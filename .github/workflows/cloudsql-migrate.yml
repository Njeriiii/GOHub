name: Database Migrations

on:
  workflow_dispatch:
  push:
    branches:
      - deployment
    paths:
      - 'Backend/migrations/**'
      - 'Backend/models/**'
      - '.github/workflows/cloudsql-migrate.yml'

jobs:
  migrate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup GCP Credentials
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > gcp-credentials.json
          chmod 600 gcp-credentials.json

      - name: Install and start Cloud SQL Proxy v2
        run: |
          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.8.1/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy
          
          ./cloud-sql-proxy \
            --credentials-file=gcp-credentials.json \
            --address 0.0.0.0 \
            --port 5432 \
            gohub-92b6b:us-west1:ngo-connect-db &
          
          sleep 10
          echo "Cloud SQL Proxy process:"
          ps aux | grep cloud-sql-proxy
          echo "Listening ports:"
          netstat -tlpn || ss -tlpn

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary
          cd Backend && pip install -r requirements.dev.txt

      - name: Test Database Connection
        run: |
          python -c "
          import psycopg2
          import sys
          try:
              print('Attempting to connect to database...')
              conn = psycopg2.connect(
                  dbname='ngo_connect',
                  user='postgres',
                  password='${{ secrets.DB_PASSWORD }}',
                  host='127.0.0.1',
                  port='5432'
              )
              cursor = conn.cursor()
              cursor.execute('SELECT version();')
              version = cursor.fetchone()
              print(f'Successfully connected to PostgreSQL. Version: {version[0]}')
              cursor.close()
              conn.close()
          except Exception as e:
              print(f'Error connecting to database: {e}', file=sys.stderr)
              sys.exit(1)
          "

      - name: Run Database Migrations
        working-directory: Backend
        env:
          FLASK_APP: "app:create_app()"
          FLASK_ENV: "production"
          DATABASE_URL: "postgresql://postgres:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/ngo_connect"
          CONFIG_CLASS: "temp_config.TempConfig"
          GOOGLE_APPLICATION_CREDENTIALS: "${{ github.workspace }}/gcp-credentials.json"
          GOOGLE_CLOUD_PROJECT: "gohub-92b6b"
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          PYTHONPATH: "${PYTHONPATH}:${GITHUB_WORKSPACE}/Backend"
        run: |
          echo "Environment:"
          env | grep -v PASSWORD
          echo "Starting migrations..."
          python -V
          python manage_db.py

      - name: Stop Cloud SQL Proxy
        if: always()
        run: |
          pkill cloud-sql-proxy || true

      - name: Cleanup
        if: always()
        run: |
          rm -f gcp-credentials.json