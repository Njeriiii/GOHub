name: Database Migrations

on:
  workflow_dispatch:
  push:
    branches:
      - deployment
    paths:
      - 'Backend/migrations/**'
      - 'Backend/models/**'
      - '.github/workflows/cloudsql-migrate.yml'

jobs:
  migrate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: gohub-92b6b

      - name: Install and start Cloud SQL Proxy
        run: |
          # Download the proxy
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          
          # Start the proxy with verbose logging
          ./cloud_sql_proxy \
            -instances=gohub-92b6b:us-west1:ngo-connect-db=tcp:5432 \
            -credential_file=${{ github.workspace }}/gcp-credentials.json \
            -verbose=true &
          
          # Wait for proxy to start and verify it's running
          sleep 10
          ps aux | grep cloud_sql_proxy
          netstat -tlpn | grep 5432 || ss -tlpn | grep 5432

      - name: Install dependencies
        working-directory: Backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test Database Connection
        run: |
          # Wait a bit more for the proxy to be fully ready
          sleep 5
          python -c "
          import psycopg2
          import time
          max_attempts = 3
          for attempt in range(max_attempts):
              try:
                  print(f'Attempt {attempt + 1} to connect to database...')
                  conn = psycopg2.connect(
                      dbname='ngo_connect',
                      user='postgres',
                      password='${{ secrets.DB_PASSWORD }}',
                      host='127.0.0.1',
                      port='5432'
                  )
                  print('Database connection successful!')
                  conn.close()
                  break
              except Exception as e:
                  print(f'Connection attempt {attempt + 1} failed: {e}')
                  if attempt < max_attempts - 1:
                      print('Waiting 5 seconds before retrying...')
                      time.sleep(5)
                  else:
                      print('All connection attempts failed')
                      exit(1)
          "

      - name: Run Database Migrations
        working-directory: Backend
        env:
          FLASK_APP: "app:create_app()"
          DATABASE_URL: "postgresql://postgres:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/ngo_connect"
        run: |
          echo "Running migrations..."
          python manage_db.py

      - name: Stop Cloud SQL Proxy
        if: always()
        run: |
          pkill cloud_sql_proxy || true