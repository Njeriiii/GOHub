name: Database Migrations

on:
  workflow_dispatch:
  push:
    branches:
      - deployment
    paths:
      - 'Backend/migrations/**'
      - 'Backend/models/**'
      - '.github/workflows/cloudsql-migrate.yml'

jobs:
  migrate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup GCP Credentials
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > gcp-credentials.json
          chmod 600 gcp-credentials.json

      - name: Install and start Cloud SQL Proxy v2
        run: |
          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.8.1/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy
          
          ./cloud-sql-proxy \
            --credentials-file=gcp-credentials.json \
            --address 0.0.0.0 \
            --port 5432 \
            gohub-92b6b:us-west1:ngo-connect-db &
          
          sleep 10
          ps aux | grep cloud-sql-proxy

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary
          cd Backend && pip install -r requirements.txt

      - name: Create temporary config override
        working-directory: Backend
        run: |
          cat > temp_config.py << EOL
          import os
          from app.config import AppConfig
          
          class TempConfig(AppConfig):
              SQLALCHEMY_DATABASE_URI = "postgresql://postgres:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/ngo_connect"
          EOL

      - name: Run Database Migrations
        working-directory: Backend
        env:
          FLASK_APP: "app:create_app()"
          FLASK_ENV: "production"
          DATABASE_URL: "postgresql://postgres:${{ secrets.DB_PASSWORD }}@127.0.0.1:5432/ngo_connect"
          CONFIG_CLASS: "temp_config.TempConfig"
          GOOGLE_APPLICATION_CREDENTIALS: "${{ github.workspace }}/gcp-credentials.json"
          GOOGLE_CLOUD_PROJECT: "gohub-92b6b"
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          echo "Starting migrations..."
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python manage_db.py

      - name: Stop Cloud SQL Proxy
        if: always()
        run: |
          pkill cloud-sql-proxy || true

      - name: Cleanup
        if: always()
        run: |
          rm -f gcp-credentials.json
          rm -f Backend/temp_config.py